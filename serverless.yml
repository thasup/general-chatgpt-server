service: general-chatgpt-server

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs22.x
  architecture: arm64
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1 # Default region, can be overridden with --region flag
  profile: ${opt:profile, 'thasup'}
  memorySize: 1024
  timeout: 30
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    PORT: 8080
    API_KEY: ${ssm:/aws/reference/secretsmanager/general-chatgpt-server-${opt:stage, 'dev'}-openai-api-key}
  apiGateway:
    shouldStartNameWithService: true
  # Add IAM permissions to access Secrets Manager
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource:
            - Fn::Join:
              - ":"
              - - "arn:aws:secretsmanager"
                - ${self:provider.region}
                - Ref: "AWS::AccountId"
                - "secret:general-chatgpt-server-${opt:stage, 'dev'}-openai-api-key*"

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

functions:
  api:
    handler: dist/lambda.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

# Dotenv plugin configuration
custom:
  dotenv:
    path: ./.env.${opt:stage, 'dev'}
    include:
      - NODE_ENV
      - PORT
      - API_KEY
      # Add other environment variables you want to expose
  serverless-offline:
    httpPort: 3000

package:
  patterns:
    - '!node_modules/.cache/**'
    - '!.git/**'
    - '!frontend/**'
    - '!.env'
    - '!.env.*'
    - '!README.md'
    - '!package-lock.json'
    - '!coverage/**'
    - '!node_modules/**'
    - 'node_modules/**'  # Include all node_modules
    - 'dist/**'